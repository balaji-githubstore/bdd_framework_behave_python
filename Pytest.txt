
$ pytest
$ pytest -q test_sysexit.py
$ pytest .\tests\demo_test.py
$ pytest -k TestClassDemoInstance -q

include class and exclude method
$ pytest -k "TestLogin and not test_two"

Run tests in a module
pytest test_mod.py

Run tests in a directory
pytest testing/


To run a specific test within a module:
pytest test_mod.py::test_func

pytest test_mod.py::TestClass::test_method

Run tests by marker expressions

@pytest.mark.ui
pytest -m slow


2. create pytest.ini file and register mark 

[pytest]
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    serial
    ui: runs only UI related test
    smoke: runs smoke test
    low

    $ pytest -m ui
3. Html
pip install pytest-html
HTML REPORT

$ pytest --html=report.html



4. to log all command output to log file
python test_out.py >myoutput.log
pytest >myoutput.log

5. To add logger

1. Add below details in pytest.ini
log_file=log1.log
log_file_level=INFO
log_file_format = %(asctime)s %(levelname)s %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

2. In class file
import pytest
import logging
from selenium import webdriver

"""Setup and Teardown & 2 test method in one class"""
"""follow - demo1, demo2, demo3, demo4"""

log = logging.getLogger()


@pytest.mark.uig
class TestLogin:
    def test_title(self):
        try:
            LOGGER.info("Title is " + self.driver.title)
            assert self.driver.title == 'Google1'
        except BaseException as error:
            LOGGER.error("Title is " + self.driver.title)
            assertpy.fail('An exception occurred: {}'.format(error))

    def test_url(self):
        log.info("Title is " + self.driver.current_url)
        assert 'https://www.google.com' in self.driver.current_url


Demo:
1. run pytest, pytest one file, pytest one class, pytest class::method, pytest mark
2. pytest html
3. logging